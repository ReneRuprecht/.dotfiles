// Place your key bindings in this file to override the defaultsauto[]
[
  // GENERAL
  {
    "key": "space y",
    "command": "runCommands",
    "args": {
      "commands": ["editor.action.clipboardCopyAction", "extension.vim_escape"]
    },
    "when": "vim.mode != 'Insert' && editorHasSelection && editorTextFocus"
  },
  {
    "key": "space p",
    "command": "editor.action.clipboardPasteAction",
    "when": "vim.mode != 'Insert' && editorTextFocus"
  },
  {
    "key": "space t m",
    "command": "bookmarks.toggle",
    "when": "vim.mode != 'Insert' && editorTextFocus"
  },
  {
    "key": "space f m",
    "command": "bookmarks.list",
    "when": "vim.mode != 'Insert' && editorTextFocus"
  },
  {
    "key": "shift+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "vim.mode == 'Visual' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "shift+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "vim.mode == 'Visual' && (editorTextFocus || !inputFocus)"
  },
  // NAVIGATION
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "space f b",
    "command": "workbench.action.showAllEditors",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  // CODE
  {
    "key": "space r f",
    "command": "editor.action.refactor",
    "when": "vim.mode != 'Insert' && editorTextFocus"
  },
  {
    "key": "shift+k",
    "command": "editor.action.showDefinitionPreviewHover",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.formatDocument",
    "key": "space f d",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.quickFix",
    "key": "space q f",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.codeAction",
    "key": "space c a",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.rename",
    "key": "space c r",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.gotoSymbol",
    "key": "space g s",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.goToImplementation",
    "key": "space g i",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.closeActiveEditor",
    "key": "space b d",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.quickOpen",
    "key": "space f f",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "editor.action.revealDefinition",
    "key": "space g d",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.goToReferences",
    "key": "space g r",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.findInFiles",
    "key": "space f s",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  // EXPLORER
  {
    "command": "workbench.view.explorer",
    "key": "ctrl+e",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "space e t",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "explorer.newFile",
    "key": "n",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "explorer.newFolder",
    "key": "shift+n",
    "when": "explorerViewletFocus"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "filesExplorer.copy",
    "key": "y",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "filesExplorer.cut",
    "key": "x",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "filesExplorer.paste",
    "key": "p",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "workbench.action.showCommands",
    "key": "shift shift"
  },
  {
    "command": "workbench.action.quickOpenSelectNext",
    "key": "ctrl+n",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenSelectPrevious",
    "key": "ctrl+p",
    "when": "inQuickOpen"
  },
  {
    "command": "editor.action.pageDownHover",
    "key": "ctrl+n",
    "when": "editorHoverFocused"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "editor.action.pageUpHover",
    "key": "ctrl+p",
    "when": "editorHoverFocused"
  },
  {
    "command": "explorer.openToSide",
    "key": "s",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "explorer.openAndPassFocus",
    "key": "enter",
    "when": "filesExplorerFocus && !inputFocus"
  },
  // TERMINAL
  {
    "command": "workbench.action.terminal.focusNext",
    "key": "ctrl+n",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.terminal.focusPrevious",
    "key": "ctrl+p",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.terminal.focus",
    "key": "alt+;",
    "when": "!terminalFocus"
  },
  {
    "command": "workbench.action.focusActiveEditorGroup",
    "key": "alt+;",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.terminal.toggleTerminal",
    "key": "alt+j"
    // "when": "(vim.mode == 'Normal' && (editorTextFocus || !inputFocus)) || terminalFocus"
  },
  {
    "command": "workbench.action.terminal.new",
    "key": "alt+shift+n",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.terminal.kill",
    "key": "alt+shift+q",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.toggleMaximizedPanel",
    "key": "ctrl+m",
    "when": "terminalFocus"
  },

  // EXTRA
  {
    "command": "workbench.action.toggleZenMode",
    "key": "space z m t",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },

  {
    // golang iferr, only if golang lsp is active
    "key": "space e e",
    "command": "editor.action.insertSnippet",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && editorLangId == 'go'",
    "args": {
      "snippet": "if err != nil {\n return nil,err\n}"
    }
  }
]
